/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MynaWalletVerifier,
  MynaWalletVerifierInterface,
} from "../MynaWalletVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[21]",
        name: "_pubSignals",
        type: "uint256[21]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cca806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635debc07e14610030575b600080fd5b61004361003e366004610c2e565b610057565b604051901515815260200160405180910390f35b6000610ac7565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47811061008f576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100c5576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa915050806100f6576000805260206000f35b5050505050565b7f284ad82feef7e4b1b9987095d967cfb25129ea851784e6aeaa2f67cacd96d81585527f0b172674344ba4cf7d211870f25aecc73e14224215ed1b885bc4f6c44b4fc72e60208601526000608086018661019a87357f048e667acebc80a97e748ad9982eab15368f940fff53873fff60fffe7808478e7f0d6573b54dc9db0e03f2d494ed4155239d7b241a11a4164bc114a8842a00456784610092565b6101ea60208801357f17db9d977250eab5a5e9b2cd8992405c41cae4eb6bf17928a4f1174b29e67b057f286bb49b4a2625e9933eed8ba2dae40b650bcb57f91a1cba2928d2fcde4c719984610092565b61023a60408801357f012a30dbde7e347d95a76d8f0f7b216bf80cc8d83e3b3334982dedabc2e3d5ca7f06a96226b42267d87208192dec57ebcd6bb88ab36b0c8f7d63663a890bca456784610092565b61028a60608801357f1387c0ca632621c6de32e3d133ff13a6046c9ab05c0d3664b2a2e56b792aeff97f14e0be3b21e91bb123b4f3ffe92b0243b0fbe45e54aa78c1370ddfe8ae209bf684610092565b6102da60808801357f03c7a043c847b921ee5a299f6cbbe9f1f4acfa766165015f25130ee93f160d8c7f20d51b0bc21392eb758c6f683f9fdf3087c609027dc88245c92d1e8a8c15099d84610092565b61032a60a08801357f1e62190b8286ffe624ed480fe5fc893aa050df6c708c78948f4232440dba7afa7f23aed7f13fd4c8fa72e37a5ae0b7b3bc0f99152a6ea85d8b6ff57698c606848484610092565b61037a60c08801357f059e73bc7a81664133410eec3d476fc12b20bf5ddb13fe40c28d1c624e3ca4b67f0f949218323e0336a937fd9044f402b23b10ab0d8f48c82a6f48b7323bd00b3984610092565b6103ca60e08801357f0e26a2caebe5330ef6059c20f7dc8a1ada623c071a71b14216d18f648164e95d7f2137c5aab92f048cdbeca439fce9b238960bf2c34940bab88bd1fd09084d2c8d84610092565b61041b6101008801357f0656171f8b98d90868d2c441ec93072f2a946ce4882329c243d7471dc19187ca7f1a34a92563c7b63c9a8ddc19082a38ab6029aeb4c02f4d3be6c5571341e0635d84610092565b61046c6101208801357f182ac4401cb2e697333d38d855e7c878a8273b680a0b9ff0748b622c30ab7c4d7f0e19fe16dec9e34a7a4e6d973b1ffd87676846696d9029b155e15d457215374484610092565b6104bd6101408801357f2062ae8fd6a037149adca82d9282ea7cbfdb91f5b6dd33175ea6760416f7b4067f27d29a88d2a3dfb8463df386f5a6585550a2a3e48347bb2c82941e3e631b997c84610092565b61050e6101608801357f021ae32e91e22ad42ac5f26e9988543a525ced71bcb6f6b30180276c3ee388e17f02a833a349efc1c9aba0b22cd13a93650ffb0dd19e6d198965fc88d6580bba7b84610092565b61055f6101808801357f2a8f1b6ad394edea2deceb3465c9b8038356127b317a153979324903c43d3bda7f176587138a6d37796ce0775edd3476fe4cfda47a1250feafaad94529d10c82d084610092565b6105b06101a08801357f20dc73398974e169fccc00efe2a55579325556076fe04adfeaa696e043b65c747f2cd8a41c432abc54e8073f51ea33e173bad58ddb9bd0f3bab04959c85888f73f84610092565b6106016101c08801357f2eede2531bf07610cd2b3f756faf4620f5e3b99ecbdb7baf2d291b2e00b396ee7f2bcad0abf16a16697b1bd069fc883bde15c5162d0b19516f631872242a1badc084610092565b6106526101e08801357f2a5bceab58e1acb9dda2a2b557600eac61f9d270f1164d0d374df46b086f47aa7f22c2ea80bebee788ea67aab93818bb5559d8a683f0d74d72f3d01a26b65c382e84610092565b6106a36102008801357f275101f4935e3db82aa051de5b6aaec166bf18cfb258f903ba1b5568f9282f4b7f1c26a8d6379ce69cacfd6f74f372ac3f8ff0af2d3bfe117b17f58bc07e1a8fb584610092565b6106f46102208801357f1b8890a6deeb215de8b5a0ba2b6e66a8492b5bd6809926689812be98942c2fa67f2d3f2cec58833ec0269ae63b33ee7b936a1bd4ebd48f76bfed5fc1c4d7a6353c84610092565b6107456102408801357f1e8fe8b04b82eefb7a23ac015758b32de809492c595a4d1c8168d71046c9d3ef7f104af3c4685f6ee36f94f404ae0c6ab7902b1005829763990d9f11ab023cd0c284610092565b6107966102608801357f29b76ab2d2fb684b0b9e8c37a975d4746a231209ffb6504fa543a2f4346fbfd37f17b8007224fc3013a932e57e8c88587a157540985f062e09161c85fbe4b7400f84610092565b6107e76102808801357f24539995e157de027f3ea5f142cf0d48439642ac101d7761b52faf240e5e85e77f1709de14620601ecb567166620cebf45836fb85b61654908d883f667f98962cf84610092565b50823581527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208401357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020820152833560408201526020840135606082015260408401356080820152606084013560a08201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e260c08201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d192660e08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101008201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101208201527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a76101408201527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8610160820152600087015161018082015260206000018701516101a08201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220820152843561024082015260208501356102608201527f2df0a2357015a216651bdb97697308411e7993a2baa3a0877a4b3236ca2a0b3f6102808201527f1acd53019f3565a4a3994268ffabdaeb7d247105eff23189168c475efc38262a6102a08201527f046259200b76a785903976a4c764b47355d10fd89a89a161f06812c6b814e0f66102c08201527f289c816ffc31a355d90fefdce75ab58df494aee7b4d4e33a7c781120ae84bdd06102e08201526020816103008360086107d05a03fa9051169695505050505050565b6040516103808101604052610adf600084013561005e565b610aec602084013561005e565b610af9604084013561005e565b610b06606084013561005e565b610b13608084013561005e565b610b2060a084013561005e565b610b2d60c084013561005e565b610b3a60e084013561005e565b610b4861010084013561005e565b610b5661012084013561005e565b610b6461014084013561005e565b610b7261016084013561005e565b610b8061018084013561005e565b610b8e6101a084013561005e565b610b9c6101c084013561005e565b610baa6101e084013561005e565b610bb861020084013561005e565b610bc661022084013561005e565b610bd461024084013561005e565b610be261026084013561005e565b610bf061028084013561005e565b610bfe6102a084013561005e565b610c0b818486888a6100fd565b90508060005260206000f35b8060408101831015610c2857600080fd5b92915050565b6000806000806103a0808688031215610c4657600080fd5b610c508787610c17565b945060c0860187811115610c6357600080fd5b604087019450610c738882610c17565b935050868187011115610c8557600080fd5b5092959194509261010001915056fea2646970667358221220f59b41e9e2699b3e5552a87230c2686f08616b73cec006528621173403868fef64736f6c63430008130033";

type MynaWalletVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MynaWalletVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MynaWalletVerifier__factory extends ContractFactory {
  constructor(...args: MynaWalletVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MynaWalletVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MynaWalletVerifier__factory {
    return super.connect(runner) as MynaWalletVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MynaWalletVerifierInterface {
    return new Interface(_abi) as MynaWalletVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MynaWalletVerifier {
    return new Contract(address, _abi, runner) as unknown as MynaWalletVerifier;
  }
}
